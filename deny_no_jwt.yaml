# What if we wanted to let in only the user with email “user1@solo.io”? Let’s see how to do that with JWT claims validation.  
# To set this up, let’s first create a rule to deny traffic that does not have a JWT. To do this, apply the following policy:

# apiVersion: security.istio.io/v1beta1
# kind: AuthorizationPolicy
# metadata:
#  name: deny-no-jwt
#  namespace: default
# spec:
#  selector:
#    matchLabels:
#      app: ratings
#  action: DENY
#  rules:
#  - from:
#    - source:
#        notRequestPrincipals: ["*"]
#  - from:
#    - source:
#        principals:
#        - cluster.local/ns/default/sa/bookinfo-reviews
  #  to:
  #   - operation:
  #       paths: ["/ratings"]


# apiVersion: security.istio.io/v1beta1
# kind: AuthorizationPolicy
# metadata:
#   name: "frontend-ingress"
#   namespace: istio-system
# spec:
#   selector:
#     matchLabels:
#       istio: ingressgateway    
#   action: DENY
#   rules:
#   - from:
#     - source:
#         notRequestPrincipals: ["*"]
#     to:
#     - operation:
#         paths: ["/productpage"]

# Ye wala is only working on istio: ingressgateway

# apiVersion: security.istio.io/v1beta1
# kind: AuthorizationPolicy
# metadata:
#   name: deny-no-jwt
# spec:
#   selector:
#     matchLabels:
#       app: ratings
#   action: DENY
#   rules:
#   - from:
#     - source:
#        notRequestPrincipals: ["*"]

# apiVersion: security.istio.io/v1beta1
# kind: AuthorizationPolicy
# metadata:
#   name: require-jwt
# spec:
#   selector:
#     matchLabels:
#       app: ratings
#   action: ALLOW
#   rules:
#   - from:
#     - source:
#        requestPrincipals: ["testing@secure.istio.io/testing@secure.istio.io"]
# ---

# apiVersion: security.istio.io/v1beta1
# kind: RequestAuthentication
# metadata:
#   name: "jwt-example"
#   namespace: istio-system
# spec:
#   selector:
#     matchLabels:
#       app: ratings
#   jwtRules:
#   - issuer: "testing@secure.istio.io"
#     jwksUri: "https://keycloak.bookinfo.hpcsvc.io/auth/realms/dev/protocol/openid-connect/token"
# ---
apiVersion: security.istio.io/v1beta1
kind: "RequestAuthentication"
metadata:
  name: ratings-jwt
spec:
  selector:
    matchLabels:
      app: productpage
  jwtRules:
    - outputPayloadToHeader: bookinfotoken
      issuer: https://keycloak.bookinfo.hpcsvc.io/auth/realms/dev
      jwksUri: https://keycloak.bookinfo.hpcsvc.io/auth/realms/dev/protocol/openid-connect/certs

---
# apiVersion: security.istio.io/v1beta1
# kind: AuthorizationPolicy
# metadata:
#   name: ratings-jwt
# spec:
#   selector:
#     matchLabels:
#       app: ratings
#   action: ALLOW
#   rules:
#   - to:
#     - operation:
#         methods: ["GET"]
#     when:
#       - key: request.auth.claims[iss]
#         values: ["https://keycloak.bookinfo.hpcsvc.io/auth/realms/dev"]

apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: ratings-jwt
spec:
  selector:
    matchLabels:
      app: productpage
  action: ALLOW
  rules:
  - to:
    - operation:
        methods: ["GET"]
    when:
      - key: request.auth.claims[iss]
        values: ["https://keycloak.bookinfo.hpcsvc.io/auth/realms/dev"]

